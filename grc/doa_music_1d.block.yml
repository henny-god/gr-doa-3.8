id: doa_music_1d
label: music_1d
category: 'DoA'

templates:
  imports: import doa
  make: doa.music_1d(${num_antennas}, ${num_signals}, ${resolution}, ${array_config}, ${phi_min}, ${phi_max}, ${theta})

parameters:
- id: num_antennas
  label: Number of Array Antennas
  dtype: int
  default: 4
- id: num_signals
  label: Number of Target Signals to Estimate
  dtype: int
  default: 1
- id: resolution
  label: Angle Sweep Resolution
  dtype: int
  default: 128
- id: array_config
  label: Array Configuration File
  dtype: file_open
  default: '~/array.cfg'
- id: phi_min
  label: Minimum Phi of Sweep
  dtype: float
  default: 0
- id: phi_max
  label: Maxmimum Phi of Sweep
  dtype: float
  default: 3.1415
- id: theta
  label: Theta plane
  dtype: float
  default: 1.5708

inputs:
- label: in
  domain: stream
  dtype: complex
  vlen: ${num_antennas*num_antennas}

outputs:
- label: out
  domain: stream
  dtype: float
  vlen: ${resolution}

documentation: |-
  "This block performs the MUSIC algorithm over a 1-dimensional slice of spherical space on an autocorrelation matrix for an arbitrary phased array. It returns a vector of floats corresponding with MUSIC's null-space strength at a given angle. The block sweeps over the phi angle (azimuth per physics convention for spherical coordinates), meaning you'll want to orient your array in the xy-plane if it is linear.
  Args:
    num_antennas: number of antennas in array
    num_signals: number of target signals to estimate DoA
    resolution: resolution of the 1d angle sweep-space
    array_config: path to the array configuration file. See README in docs for how to make these.
    phi_min: start phi of sweep-space
    phi_max: end phi of sweep-space
    theta: theta-plane of the sweep space. For example, if you leave this at pi, the 1d sweep will take lpace in the xy-plane.
    "

file_format: 1
