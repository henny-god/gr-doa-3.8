id: doa_beamform_2d
label: beamform_2d
category: 'DoA'

templates:
  imports: import doa
  make: doa.beamform_2d(${num_antennas}, ${resolution}, ${array_config}, ${capon}, ${theta_min}, ${theta_max}, ${phi_min}, ${phi_max})

parameters:
- id: num_antennas
  label: Number of Antennas
  dtype: int
  default: '4'
- id: resolution
  label: Angle Sweep Resolution
  dtype: int
  default: '128'
- id: array_config
  label: Array Config File
  dtype: file_open
  default: '~/array.cfg'
- id: capon
  label: Beamforming Technique
  dtype: enum
  default: 0
  options: ['0', '1']
  option_labels: [Regular, Capon]
- id: theta_min
  label: Mimimum Theta of Sweep
  dtype: float
  default: 0
- id: theta_max
  label: Maximum Theta of Sweep
  dtype: float
  default: 180
- id: phi_min
  label: Mimimum Phi of Sweep
  dtype: float
  default: 0
- id: phi_max
  label: Maximum phi of Sweep
  dtype: float
  default: 360
  
inputs:
- label: in
  domain: stream
  dtype: complex
  vlen: ${num_antennas*num_antennas}

outputs:
- label: out
  domain: stream
  dtype: byte
  vlen: ${resolution * resolution * 2}
  
documentation: |-
  "Takes an autocorrelation matrix for num_antennas then performs beamforming given an array specification. Outputs a one-dimensional array of bytes corresponding to the beamforming power at angle steps.
  Args:
    num_antennas: number of antennas in the array (input signal vector length)
    resolution: number of steps in the beamforming interpolation. The output array has a vertical axis of resolution and a horizontal axis of 2*resolution, as would typically be used in sweeping through the full 180,360 theta, phi space.
    array_config: specify array configuration in a file
    capon: whether or not to use the Capon improvement
    theta_min: starting theta value of sweep
    theta_max: ending theta value of sweep
    phi_min: starting phi value of sweep
    phi_max: ending phi value of sweep
  "

file_format: 1
