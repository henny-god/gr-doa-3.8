# auto-generated by grc.converter

id: doa_find_local_max
label: Find Local Max.
category: DoA

parameters:
-   id: num_max_vals
    label: Num. Max. Values
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: vector_len
    label: Vector Len.
    dtype: int
    default: 2**9
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: x_min
    label: X min
    dtype: float
    default: '0.0'
-   id: x_max
    label: X max
    dtype: float
    default: '180.0'

inputs:
-   domain: stream
    dtype: float
    vlen: ${ vector_len }

outputs:
-   label: max
    domain: stream
    dtype: float
    vlen: ${ num_max_vals }
-   label: arg-max
    domain: stream
    dtype: float
    vlen: ${ num_max_vals }
asserts:
- ${ num_max_vals > 0 }
- ${ vector_len > 0 }
- ${ x_max > x_min }

templates:
    imports: import doa
    make: doa.find_local_max(${num_max_vals}, ${vector_len}, ${x_min}, ${x_max})

documentation: |-
    "This block locates a single or a set of maxima and outputs a sorted set of found value(s).  If the number of maxima is not met, a found maximum is repeated to meet the this requirement.
    Args:
      num_max_vals: Number of indexes to output.
      vector_len: Length of input vector.
      x_min: Minimum value for x-axis.
      x_max: Maximum value for x-axis."

file_format: 1
